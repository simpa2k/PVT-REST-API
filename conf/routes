# Route.
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /                                         controllers.HomeController.index
GET     /assets/*file                             controllers.Assets.versioned(path="/public", file: Asset)

# Interesting tidbit which indicate POST might be better than GET for passing sensitive information:
# https://security.stackexchange.com/questions/12531/ssl-with-get-and-post
# Should be the second answer.
POST    /login                                    controllers.SecurityController.login
POST    /logout                                   controllers.SecurityController.logout

POST    /facebook/login                           controllers.FacebookSecurityController.login

#PUT     /users/createTenant                       controllers.UsersController.create

#PUT     /users/createRenter                       controllers.UsersController.create

GET     /users                                    controllers.UsersController.getUsers(maxRent: Option[java.lang.Integer], maxDeposit: Option[java.lang.Integer], minSize: Option[java.lang.Double], start: Option[java.lang.String], end: Option[java.lang.String])
GET     /users/me                                 controllers.UsersController.getUser
GET     /users/images                             controllers.UsersController.getUserImage
POST    /users/profiles                           controllers.UsersController.createProfile

GET     /interests                                controllers.EdgesController.get(count: Option[java.lang.Integer], offset: Option[java.lang.Integer], tenantId: Option[java.lang.Long], renterId: Option[java.lang.Long], mutual: Option[java.lang.Boolean])
POST    /interests                                controllers.EdgesController.create
PUT     /interests                                controllers.EdgesController.setMutual(renterId: Long, tenantId: Long)
DELETE  /interests                                controllers.EdgesController.withdrawInterest(tenantId: Long, accommodationId: Long)

GET     /accommodation                            controllers.AccommodationController.get(count: Option[java.lang.Integer], offset: Option[java.lang.Integer], rent: Option[java.lang.Double], size: Option[java.lang.Double], smokingAllowed: Option[java.lang.Boolean], animalsAllowed: Option[java.lang.Boolean])
PUT     /accommodation                            controllers.AccommodationController.put
POST    /accommodation                            controllers.AccommodationController.createAccommodation

GET     /swipingsessions                          controllers.SwipingSessionsController.getSwipingSessionWithExactParticipants(emailAddresses)
GET     /swipingsessions/:emailAddress            controllers.SwipingSessionsController.getSwipingSessionWithParticipant(emailAddress)
POST    /swipingsessions                          controllers.SwipingSessionsController.createSwipingSession(emailAddresses)
PUT     /swipingsessions                          controllers.SwipingSessionsController.chooseActivities(swipingSessionId: Long, email, activities)

GET     /gather                                   controllers.ActivityGatheringController.gather2

GET     /trafiklab                                controllers.ActivityGatheringController.trafikLab

